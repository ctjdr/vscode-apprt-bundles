{
    "$schema": "http://json-schema.org/draft-07/schema",
    "$id": "https://www.conterra.de/schemas/manifest.schema.json",
    "definitions": {
        "dependencies-type": {
            "type": "object",
            "additionalProperties": {
                "type": "string",
                "markdownDescription": "Name of dependent bundle mapped to a version range accepted for this dependency.\n\nExamples:\n* `~1.2.3`: later or 1.2.3-x and earlier then 1.3.0-0 (\"until next minor\")\n* `^1.2.3`: later or 1.2.3-x and earlier then 2.0.0-0 (\"until next major\")\n* `1.2.3`: 1.2.3-x (\"This version, including prereleases\")\n\nSee https://docs.conterra.de/en/mapapps/latest/developersguide/osgi-runtime/module-layer.html#_advanced_syntax"
            },
            "default": {},
            "defaultSnippets": [
                {
                    "body": {
                        "${1:bundle_name}": "${2:version}"
                    }
                }
            ]
        },
        "icon-type": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "url": {
                    "type": "string",
                    "markdownDescription": "A relative path to an image stored with the bundle or a network resource image."
                },
                "width": {
                    "type": "integer"
                },
                "height": {
                    "type": "integer"
                }
            },
            "default": {},
            "examples": [
                {
                    "url": "/icons/bundle.png",
                    "width": 64,
                    "height": 64
                }
            ]
        },
        "license-type": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
                "type": {
                    "type": "string",
                    "examples": [
                        "GPL",
                        "Apache"
                    ]
                },
                "version": {
                    "type": "string",
                    "examples": [
                        "",
                        "2.0"
                    ]
                },
                "url": {
                    "type": "string",
                    "examples": [
                        "",
                        "https://"
                    ]
                }
            }
        }
    },
    "allOf": [
        {
            "oneOf": [
                {
                    "required": ["name"]
                },
                {
                    "required": ["Bundle-SymbolicName"]
                }

            ]
        },
        {
            "oneOf": [
                {
                    "required": ["version"]
                },
                {
                    "required": ["Bundle-Version"]
                }

            ]
        }
    ],
    "additionalProperties": false,
    "properties": {
        "$schema":true,
        "name": {
            "type": "string",
            "markdownDescription": "Unique name of this bundle.\n\nUsed as an identifier by the runtime. Should match the folder name of this bundle."
        },
        "namespace": {
            "type": "string",
            "markdownDescription": "The namespace of this bundle.\n\nDefaults to the `\"name\"` of this bundle."
        },
        "version": {
            "type": "string",
            "examples": [
                "1.0.0"
            ],
            "markdownDescription": "The version of this bundle.\n\nHas to follow the rules of semantic versioning as defined by https://semver.org/"
        },
        "title": {
            "type": "string",
            "markdownDescription": "The human-friendly display name of this bundle.\n\nDefaults to the value of `\"name\"`."
        },
        "description": {
            "type": "string",
            "markdownDescription": "A description of this bundle.\n\nDisplayed in the Live Configuration bundle details."
        },
        "keywords": {
            "type": "array",
            "items": {
                "type":"string"
            },
            "default": [],
            "markdownDescription": "A list of categories (application specific use, tags for the bundle).\n\nDisplayed in the Live Configuration bundle details."
        },
        "i18n": {
            "type": "array",
            "items": {
                "type":"string"
            },
            "default": ["bundle"],
            "markdownDescription": "Names of the i18n files.\n\nDefaults to `[\"bundle\"]` if `\"bundle\": true` is set.\nMust be set to `[]` if no i18n files are provided (i.e. to disable i18n).\n\nFor details, see https://docs.conterra.de/en/mapapps/latest/developersguide/osgi-runtime/module-layer.html#i18n .",
            "examples": [
                [],
                ["bundle"]
            ]
        },
        "vendor": {
            "type": "string",
            "markdownDescription": "Name of the bundle vendor.\n\nDisplayed in the Live Configuration bundle details."
        },
        "author": {
            "type": "string",
            "markdownDescription": "Name of the bundle author.\n\nUsed for package.json compatibility."
        },
        "contactAddress": {
            "type": "string",
            "default": "",
            "markdownDescription": "Address where problems with the bundle may be reported, for example an email address.\n\nDisplayed in the Live Configuration bundle details."
        },
        "layer": {
            "type": "string",
            "default": "",
            "markdownDescription": "Name of a `.js` file, which is loaded during the resolve phase of the bundle.\n\nThis file should load all resources required for bundle loading and component resolving, like the implementation class of a component.\n\nDefaults to `\"module\"` if `\"bundle\": true` is set.\nSet to `\"\"` to disable loading a file in any case"
        },
        "startLevel": {
            "type": "integer",
            "examples": [
                50
            ],
            "markdownDescription": "Defines the StartLevel of this bundle.\n\nThis provides a way to modify or optimize the start order of bundles."
        },
        "bundle": {
            "type": "boolean",
            "default": true,
            "markdownDescription": "If set to `true` consuming entities (like the runtime is) will treat this as a _real_ bundle, applying the following defaults, if not specified:\n* `\"layer\": \"module\"`\n* `\"main\": \"main\"`\n* `\"i18n\": [\"bundle\"]`\n\nIf requested from the JS Registry, `\"bundle\": true` is automatically set.\n\nIt is recommended to set this to `true`."
        },
        "productName": {
            "type": "string",
            "markdownDescription": "Name of product this bundle belongs to.\n\nUsed to group bundles in some UI element of map.apps.",
            "examples": [
                "map.apps"
            ]
        },
        "main": {
            "type": "string",
            "default": "",
            "markdownDescription": "AMD package main file, normally used to trigger i18n loading.\n\nDefaults to `\"main\"` if `\"bundle\": true` is set. Set to `\"\"` to disable loading a file in any case."
        },
        "configBundleLocation": {
            "type": "string",
            "default": "/config",
            "markdownDescription": "Points to the sub bundle or external bundle."
        },
        "licenses": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/license-type"
            },
            "examples": [
                [],
                [
                    {
                        "type": "",
                        "version": "",
                        "url": ""
                    }
                ]
            ],
            "markdownDescription": "Metadata about the license of this bundle.\n\nDisplayed in the Live Configuration bundle details."
        },
        "icon": {
            "$ref": "#/definitions/icon-type",
            "markdownDescription": "Metadata about the icon of this bundle.\n\nUsed in the Live Configuration bundle list."
        },
        "copyright": {
            "type": "string",
            "markdownDescription": "Copyright information.\n\nDisplayed in the Live Configuration bundle details."
        },
        "url": {
            "type": "string",
            "markdownDescription": "URL, from whichfurther information about the bundle may be obtained.\n\nDisplayed in the Live Configuration bundle details."
        },
        "autoStartPolicy": {
            "enum": ["yes", "no"],
            "default": "no",
            "markdownDescription": "Defines if this bundle shall be started by the runtime.\n\nDefaults to `\"yes\"`.",
            "enumDescriptions": [
                "Bundle shall be started by the runtime",
                "Bundle startup is handled manually"
            ]
        },
        "activator": {
            "type": "string",
            "markdownDescription": "Specifies a bundle activator class that implements the `BundleActivator` interface.\n\nIts `start(...)` and `stop(...)` methods are called by the runtime when the bundle is started and stopped, respectively."
        },
        "requiredExecutionEnvironment": {
            "type": "array",
            "items": {
                "type": "string",
                "uniqueItems": true
            },
            "default": [],
            "examples": [
                ["IE:[7,]","FF:[3,]"]
            ],
            "markdownDescription": "Specifies client environment requirements.\n\nIf this requirements are not fulfilled, the bundle is not started."
        },
        "excludedExecutionEnvironment": {
            "type": "array",
            "items": {
                "type": "string",
                "uniqueItems": true
            },
            "default": [],
            "examples": [
                ["iPhone"]
            ],
            "markdownDescription": "Excludes an execution environment\n\nWorks like `\"requiredExecutionEnvironment\"`, but excluding and not including."
        },
        "dependencies": {
            "$ref": "#/definitions/dependencies-type",
            "markdownDescription": "A map of bundle names to their accepted versions this bundle depends on.\n\nIf this bundle has an implementation class dependency to another bundle (i.e. it needs a class of another bundle), declare this dependency here.\n\nIf a bundle requires another bundle to be installed in the application to work correctly, this requirement should explicitly be expressed here. The runtime ensures that theses bundles are started before this bundle."
        },
        "optionalDependencies": {
            "$ref": "#/definitions/dependencies-type",
            "markdownDescription": "A map of bundle names to their accepted versions this bundle depends on, _but can still work without_.\n\nIn contrast to dependencies declared under `\"dependencies\"` this bundle is started, even if a dependency declared here fails to load."
        },
        "skipResolve": {
            "type": "boolean",
            "examples": [true],
            "markdownDescription": "Disables fetching of any js file during *resolve* phase.\n\nDefaults to `false`."
        },

        "components": {
            "type": "array",
            "items": {
                "$ref": "component.schema.json"
            },
            "markdownDescription": "This is the entry point for component declarations.\n\nSee Declarative services: https://docs.conterra.de/en/mapapps/latest/developersguide/osgi-runtime/declarative-components.html"
        },
        "Config-Bundle-Location": {
            "type": "string",
            "markdownDescription": "Points to the sub bundle or external bundle.",
            "deprecationMessage": "Use \"configBundleLocation\" instead. [manifest(1)]"
        },
        "Bundle-SymbolicName": {
            "type": "string",
            "markdownDescription": "Unique name of this bundle.\n\nUsed as an identifier by the runtime. Should match the folder name of this bundle.",
            "deprecationMessage": "Use \"name\" instead. [manifest(1)]"
        },
        "Bundle-Version": {
            "type": "string",
            "deprecationMessage": "Use \"version\" instead. [manifest(1)]",
            "markdownDescription": "The version of this bundle.\n\nHas to follow the rules of semantic versioning as defined by https://semver.org/"
        },
        "Bundle-Name": {
            "type": "string",
            "deprecationMessage": "Use \"title\" instead. [manifest(1)]",
            "markdownDescription": "The human-friendly display name of this bundle.\n\nDefaults to the `\"name\"` of this bundle."
        },
        "Bundle-Description": {
            "type": "string",
            "deprecationMessage": "Use \"description\" instead. [manifest(1)]",
            "markdownDescription": "A description of this bundle.\n\nDisplayed in the Live Configuration bundle details."
        },
        "Bundle-Vendor": {
            "type": "string",
            "deprecationMessage": "Use \"vendor\" instead. [manifest(1)]",
            "markdownDescription": "Name of the bundle vendor.\n\nDisplayed in the Live Configuration bundle details."
        },
        "Bundle-Category": {
            "type": "array",
            "deprecationMessage": "Use \"keywords\" instead. [manifest(1)]",
            "markdownDescription": "A list of categories (application specific use, tags for the bundle).\n\nDisplayed in the Live Configuration bundle details."
        },
        "Bundle-ContactAddress": {
            "type": "string",
            "deprecationMessage": "Use \"contactAddress\" instead. [manifest(1)]",
            "markdownDescription": "Address where problems with the bundle may be reported, for example an email address.\n\nDisplayed in the Live Configuration bundle details."
        },
        "Bundle-Copyright": {
            "type": "string",
            "deprecationMessage": "Use \"copyright\" instead. [manifest(1)]",
            "markdownDescription": "Copyright informatione.\n\nDisplayed in the Live Configuration bundle details."
        },
        "Bundle-DocURL": {
            "type": "string",
            "deprecationMessage": "Use \"url\" instead. [manifest(1)]",
            "markdownDescription": "URL, from whichfurther information about the bundle may be obtained.\n\nDisplayed in the Live Configuration bundle details."
        },
        "Bundle-Main": {
            "type": "string",
            "deprecationMessage": "Use \"main\" instead. [manifest(1)]",
            "markdownDescription": "AMD package main file, normally used to trigger i18n loading.\n\nDefaults to `\"main\"` if `\"bundle\": true` is set. Set to `\"\"` to disable loading a file in any case."
        },
        "Bundle-Icon": {
            "type": "object",
            "deprecationMessage": "Use \"icon\" instead. [manifest(1)]",
            "markdownDescription": "Metadata about the icon of this bundle.\n\nUsed in the Live Configuration bundle list."
        },
        "Bundle-Namespace": {
            "type": "string",
            "deprecationMessage": "Use \"namespace\" instead. [manifest(1)]",
            "markdownDescription": "The namespace of this bundle.\n\nDefaults to the `\"name\"` of this bundle."
        },
        "Bundle-Layer": {
            "type": "string",
            "deprecationMessage": "Use \"layer\" instead. [manifest(1)]",
            "markdownDescription": "Name of a `.js` file, which is loaded during the resolve phase of the bundle.\n\nThis file should load all resources required for bundle loading and component resolving, like the implementation class of a component.\n\nDefaults to `\"module\"` if `\"bundle\": true` is set.\nSet to `\"\"` to disable loading a file in any case"
        },
        "Bundle-StartLevel": {
            "type": "integer",
            "deprecationMessage": "Use \"startLevel\" instead. [manifest(1)]",
            "markdownDescription": "Defines the StartLevel of this bundle.\n\nThis provides a way to modify or optimize the start order of bundles."
        },
        "Bundle-AutoStartPolicy": {
            "type": "string",
            "deprecationMessage": "Use \"autoStartPolicy\" instead. [manifest(1)]",
            "markdownDescription": "Defines that this bundle shall be started by the runtime.\n\nSet to `\"no\"` if bundle startup should be controlled manually."
        },
        "Bundle-Activator": {
            "type": "string",
            "deprecationMessage": "Use \"activator\" instead. [manifest(1)]",
            "markdownDescription": "Specifies a bundle activator class that implements the `BundleActivator` interface.\n\nIts `start(...)` and `stop(...)` methods are called by the runtime when the bundle is started and stopped, respectively."
        },
        "Bundle-Localization": {
            "type": "array",
            "deprecationMessage": "Use \"i18n\" instead. [manifest(1)]",
            "markdownDescription": "Names of the i18n files.\n\nDefaults to `[\"bundle\"]` if `\"bundle\": true` is set.\nMust be set to `[]` if no i18n files are provided (i.e. to disable i18n).\n\nFor details, see https://docs.conterra.de/en/mapapps/latest/developersguide/osgi-runtime/module-layer.html#i18n ."
        },
        "Bundle-RequiredExecutionEnvironment": {
            "type": "array",
            "deprecationMessage": "Use \"requiredExecutionEnvironment\" instead. [manifest(1)]",
            "markdownDescription": "Specifies client environment requirements.\n\nIf this requirements are not fulfilled, the bundle is not started."
        },
        "Bundle-ExcludedExecutionEnvironment": {
            "type": "array",
            "deprecationMessage": "Use \"excludedExecutionEnvironment\" instead. [manifest(1)]",
            "markdownDescription": "Excludes an execution environment\n\nWorks like `\"requiredExecutionEnvironment\"`, but excluding and not including."
        },
        "Components": {
            "type": "array",
            "items": {
                "$ref": "component.schema.json"
            },
            "deprecationMessage": "Use \"components\" instead. [manifest(1)]",
            "markdownDescription": "This is the entry point for component declarations.\n\nSee Declarative services: https://docs.conterra.de/en/mapapps/latest/developersguide/osgi-runtime/declarative-components.html"
        },
        "Product-Name": {
            "type": "string",
            "deprecationMessage": "Use \"productName\" instead. [manifest(1)]",
            "markdownDescription": "Name of product this bundle belongs to.\n\nUsed to group bundles in some UI element of map.apps."
        },
        "Bundle-License": {
            "type": "string",
            "deprecationMessage": "Use \"licenses\" instead. [manifest(42)]",
            "markdownDescription": "Metadata about the license of this bundle.\n\nDisplayed in the Live Configuration bundle details."
        },
        "Require-Bundle": {
            "type": "array",
            "deprecationMessage": "Use \"dependencies\" instead. [manifest(52)]",
            "markdownDescription": "A map of bundle names to their accepted versions this bundle depends on.\n\nIf this bundle has an implementation class dependency to another bundle (i.e. it needs a class of another bundle), declare this dependency here.\n\nIf a bundle requires another bundle to be installed in the application to work correctly, this requirement should explicitly be expressed here. The runtime ensures that theses bundles are started before this bundle."
        },
        "i18n-extension": {
            "type": "array",
            "items": {
                "type": "string"
            },
            "markdownDescription": "This is an dynamic manifest property used to transport. Additional to load i18n. It is usually added by a ConfigLocator and not defined by the bundle."
        },



        "Framework-Startlevel-Beginning": {
            "$ref": "framework.schema.json#/definitions/Framework-Startlevel-Beginning"
        },
        "Framework-Startlevel-Running": {
            "$ref": "framework.schema.json#/definitions/Framework-Startlevel-Running"
        },
        "Components-Create-On-Starting": {
            "$ref": "framework.schema.json#/definitions/Components-Create-On-Starting"
        },
        "Application-Root": {
            "$ref": "framework.schema.json#/definitions/Application-Root"
        },
        "Application-Config": {
            "$ref": "framework.schema.json#/definitions/Application-Config"
        },



        "layout-widgets": {
            "$ref": "layout.schema.json#/definitions/layout-widgets"
        },
        "layout-templates": {
            "$ref": "layout.schema.json#/definitions/layout-templates"
        },

        "cssThemes": {
            "$ref": "layout.schema.json#/definitions/cssThemes"
        },
        "cssThemesExtension": {
            "$ref": "layout.schema.json#/definitions/cssThemesExtension"
        },

        "CSS-Themes": {
            "deprecationMessage": "Use \"cssThemes\" instead. Since version 4.13.2.",
            "$ref": "layout.schema.json#/definitions/cssThemes"
        },
        "CSS-Themes-Extension": {
            "deprecationMessage": "Use \"cssThemesExtension\" instead. Since version 4.13.2.",
            "$ref": "layout.schema.json#/definitions/cssThemesExtension"
        },
        
        
        "domain-config": {
            "$ref": "support.schema.json#/definitions/domain-config"
        },
        "ACE-VERSION": {
            "$ref": "support.schema.json#/definitions/ACE-VERSION"
        },
        "d3-version": {
            "$ref": "support.schema.json#/definitions/d3-version"
        }

    },
    "markdownDescription": "The manifest.json file provides some meta information and defines the functionality provided by the bundle.",

    "examples": [
        {},
        {
            "name": "",
            "version": "",
            "bundle": true
        },
        {
            "name": "",
            "version": "",
            "title": "",
            "vendor": "con terra GmbH",
            "productName": "map.apps",
            "keywords": [
                "mapping"
            ],
            "main": "main",
            "layer": "module",
            "dependencies": {
            },
            "components": []
        }
    ]

}